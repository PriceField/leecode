/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int Rob(TreeNode root) {
        int [] ans=Rb(root);
        return Math.Max(ans[0],ans[1]);
    }
    
    private int[] Rb(TreeNode root){
        if (root==null){
            return new int[2];
        }
        int [] left=Rb(root.left);
        int [] right=Rb(root.right);
        int [] res=new int [2];
        res[0]=Math.Max(left[0],left[1])+Math.Max(right[0],right[1]);
        res[1]=root.val+left[0]+right[0];
        
        return res;
    }
    /*
    public int Rub(TreeNode root) {
        return Math.Max(RobExcludeRoot(root),RobIncludeRoot(root));
    }
    
    private int RobExcludeRoot(TreeNode root){
        if (root==null){
            return 0;
        }
        return Rob(root.left)+Rob(root.right);
    }
    
    private int RobIncludeRoot(TreeNode root){
        if (root==null){
            return 0;
        }
        return root.val+RobExcludeRoot(root.left)+RobExcludeRoot(root.right);
    }
    */
}