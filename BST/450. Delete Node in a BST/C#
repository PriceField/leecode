/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public TreeNode DeleteNode(TreeNode root, int key) {
        if (root==null){
            return null;
        }
        
        if (root.val==key){
            if (root.right==null){
                return root.left;
            }
            
            if (root.left==null){
                return root.right;
            }
            
            root.val=findMin(root.right).val;
            root.right=DeleteNode(root.right, root.val);
          
        }
        
        if (root.val>key){
            root.left=DeleteNode(root.left, key);
        }
        else{
            root.right=DeleteNode(root.right, key);
        }
        
        return root;
    }
    
    private TreeNode findMin(TreeNode root){
        if (root.left==null){
            return root;
        }
        
        return findMin(root.left);
    }
}
